<?xml version="1.0" encoding="UTF-8"?>
<test-data>

	<!-- RETURN -->

    <test-code>
        <description><![CDATA[
Legal return tag.
     ]]></description>
     	<rule-property name="minimumContentLength">0</rule-property>
     	<rule-property name="checkReferences">false</rule-property>
        <expected-problems>0</expected-problems>
        <code><![CDATA[
package net.sourceforge.pmd.lang.java.rule.comments;
public class JavaDocTestClass {
	
	/**
	 * @return Some integer.
	 */
	public int method() { return 42; }
}
     ]]></code>
    </test-code>
    
    <test-code>
        <description><![CDATA[
Illegal return tag.
     ]]></description>
     	<rule-property name="minimumContentLength">0</rule-property>
     	<rule-property name="checkReferences">false</rule-property>
        <expected-problems>3</expected-problems>
        <code><![CDATA[
package net.sourceforge.pmd.lang.java.rule.comments;
/**
 * @return Illegal class return.
 */
public class JavaDocTestClass {
	
	/**
	 * @return Illegal enum return.
	 */
	public enum Enum {}

	/**
	 * @return Illegal void return.
	 */
	public void method() {}
}
     ]]></code>
    </test-code>
    
    <test-code>
        <description><![CDATA[
Missing return tag.
     ]]></description>
     	<rule-property name="minimumContentLength">0</rule-property>
     	<rule-property name="checkReferences">false</rule-property>
        <expected-problems>1</expected-problems>
        <code><![CDATA[
package net.sourceforge.pmd.lang.java.rule.comments;
public class JavaDocTestClass {
	/**
	 */
	public int method() { return 0; }
}
     ]]></code>
    </test-code>
    
    <test-code>
        <description><![CDATA[
Malformed return tag.
     ]]></description>
     	<rule-property name="minimumContentLength">0</rule-property>
     	<rule-property name="checkReferences">false</rule-property>
        <expected-problems>1</expected-problems>
        <code><![CDATA[
package net.sourceforge.pmd.lang.java.rule.comments;
public class JavaDocTestClass {
	/**
	 * @return
	 */
	public int method() { return 0; }
}
     ]]></code>
    </test-code>

   	<!-- PARAM -->
   	
    <test-code>
        <description><![CDATA[
Illegal param tag.
     ]]></description>
     	<rule-property name="minimumContentLength">0</rule-property>
     	<rule-property name="checkReferences">false</rule-property>
        <expected-problems>3</expected-problems>
        <code><![CDATA[
package net.sourceforge.pmd.lang.java.rule.comments;
/**
 * Illegal (not a generic type). 
 * @param illegalClassParam Not allowed here.
 */
public class JavaDocTestClass {

	/**
     * Illegal (enum). 
	 * @param illegalEnumParam Not allowed here.
	 */
	public enum Enum {}

	/**
	 * Parameter not found.
	 *
	 * @param noParams Not allowed here.
	 */
	public void method() {}
}
     ]]></code>      
    </test-code>        
              
    <test-code>
        <description><![CDATA[
Undocumented parameter.
     ]]></description>
     	<rule-property name="minimumContentLength">0</rule-property>
     	<rule-property name="checkReferences">false</rule-property>
        <expected-problems>6</expected-problems>
        <code><![CDATA[
package net.sourceforge.pmd.lang.java.rule.comments;
/**
 * Parameter <E> is undocumented
 * Parameter <H> is undocumented
 */
public class JavaDocTestClass <E, H extends Map> {

	/**
	 * Parameter <F> is undocumented
	 * Parameter <F> is undocumented
	 * Parameter f is undocumented
	 * Parameter g is undocumented
	 * @return Returns something.
	 */
	public <F, G> F method(F f, G g) { return null; }	
}
     ]]></code>      
    </test-code>
                          
    <test-code>
        <description><![CDATA[
Malformed parameter.
     ]]></description>
     	<rule-property name="minimumContentLength">0</rule-property>
     	<rule-property name="checkReferences">false</rule-property>
        <expected-problems>2</expected-problems>
        <code><![CDATA[
package net.sourceforge.pmd.lang.java.rule.comments;

public class JavaDocTestClass <E, H extends Map> {

	/**
	 * @param
	 * @param malformed
	 */
	public void method() {}	
}
     ]]></code>      
    </test-code>
             
	<!-- AUTHOR -->
                            
    <test-code>
        <description><![CDATA[
Author tag.
     ]]></description>
     	<rule-property name="minimumContentLength">0</rule-property>
     	<rule-property name="checkReferences">false</rule-property>
        <expected-problems>0</expected-problems>
        <code><![CDATA[
package net.sourceforge.pmd.lang.java.rule.comments;

/**
 * @author The author.
 */
public class JavaDocTestClass {
	
	/**
	 * @author The author.
	 */
	public enum Enum {}
	
	/**
	 * @author The author.
	 */
	public interface Interface {}	
}
     ]]></code>      
    </test-code>
                                           
    <test-code>
        <description><![CDATA[
Malformed author tag.
     ]]></description>
     	<rule-property name="minimumContentLength">0</rule-property>
     	<rule-property name="checkReferences">false</rule-property>
        <expected-problems>1</expected-problems>
        <code><![CDATA[
package net.sourceforge.pmd.lang.java.rule.comments;

/**
 * @author
 */
public class JavaDocTestClass {
}
     ]]></code>      
    </test-code>
                                                   
    <test-code>
        <description><![CDATA[
Illegal author tag.
     ]]></description>
     	<rule-property name="minimumContentLength">0</rule-property>
     	<rule-property name="checkReferences">false</rule-property>
        <expected-problems>2</expected-problems>
        <code><![CDATA[
package net.sourceforge.pmd.lang.java.rule.comments;

public class JavaDocTestClass {

	/**
  	 * @author Illegal author.
     */
	public static final int AUTHOR = 10;
	
	/**
  	 * @author Illegal author.
     */
	public void method() {}	
}
     ]]></code>      
    </test-code>
                        
	<!-- VERSION -->
                            
    <test-code>
        <description><![CDATA[
Version tag.
     ]]></description>
     	<rule-property name="minimumContentLength">0</rule-property>
     	<rule-property name="checkReferences">false</rule-property>
        <expected-problems>0</expected-problems>
        <code><![CDATA[
package net.sourceforge.pmd.lang.java.rule.comments;

/**
 * @version Some version.
 */
public class JavaDocTestClass {
}
     ]]></code>      
    </test-code>
                                           
    <test-code>
        <description><![CDATA[
Malformed version tag.
     ]]></description>
     	<rule-property name="minimumContentLength">0</rule-property>
     	<rule-property name="checkReferences">false</rule-property>
        <expected-problems>1</expected-problems>
        <code><![CDATA[
package net.sourceforge.pmd.lang.java.rule.comments;

/**
 * @version
 */
public class JavaDocTestClass {
}
     ]]></code>      
    </test-code>
                                        
	<!-- SINCE -->
                            
    <test-code>
        <description><![CDATA[
Since tag.
     ]]></description>
     	<rule-property name="minimumContentLength">0</rule-property>
     	<rule-property name="checkReferences">false</rule-property>
        <expected-problems>0</expected-problems>
        <code><![CDATA[
package net.sourceforge.pmd.lang.java.rule.comments;

/**
 * @since Some version.
 */
public class JavaDocTestClass {
}
     ]]></code>      
    </test-code>
                                           
    <test-code>
        <description><![CDATA[
Malformed since tag.
     ]]></description>
     	<rule-property name="minimumContentLength">0</rule-property>
     	<rule-property name="checkReferences">false</rule-property>
        <expected-problems>1</expected-problems>
        <code><![CDATA[
package net.sourceforge.pmd.lang.java.rule.comments;

/**
 * @since
 */
public class JavaDocTestClass {
}
     ]]></code>      
    </test-code>
               
   	<!-- DEPRECATED -->
   	
    <test-code>
        <description><![CDATA[
Deprecated tag.
     ]]></description>
     	<rule-property name="minimumContentLength">0</rule-property>
     	<rule-property name="checkReferences">false</rule-property>
        <expected-problems>0</expected-problems>
        <code><![CDATA[
package net.sourceforge.pmd.lang.java.rule.comments;
public class JavaDocTestClass {
	/**
	 * @deprecated Replaced by OtherClass.
	 * @return Some integer.
	 */
	public int method() { return 0; }
}
     ]]></code>      
    </test-code>
              
    <test-code>
        <description><![CDATA[
Malformed deprecated tag.
     ]]></description>
     	<rule-property name="minimumContentLength">0</rule-property>
     	<rule-property name="checkReferences">false</rule-property>
        <expected-problems>1</expected-problems>
        <code><![CDATA[
package net.sourceforge.pmd.lang.java.rule.comments;
public class JavaDocTestClass {
	/**
	 * @deprecated
	 */
	public void method() {}
}
     ]]></code>      
    </test-code>
                                                
	<!-- LINK -->
                            
    <test-code>
        <description><![CDATA[
Link tag.
     ]]></description>
     	<rule-property name="minimumContentLength">0</rule-property>
     	<rule-property name="checkReferences">false</rule-property>
        <expected-problems>0</expected-problems>
        <code><![CDATA[
package net.sourceforge.pmd.lang.java.rule.comments;

/**
 * {@link Class}
 */
public class JavaDocTestClass {
}
     ]]></code>      
    </test-code>
                                           
    <test-code>
        <description><![CDATA[
Malformed link tag.
     ]]></description>
     	<rule-property name="minimumContentLength">0</rule-property>
     	<rule-property name="checkReferences">false</rule-property>
        <expected-problems>1</expected-problems>
        <code><![CDATA[
package net.sourceforge.pmd.lang.java.rule.comments;

/**
 * {@link}
 */
public class JavaDocTestClass {
}
     ]]></code>      
    </test-code>
                                                                       
	<!-- SEE -->
                            
    <test-code>
        <description><![CDATA[
See tag.
     ]]></description>
     	<rule-property name="minimumContentLength">0</rule-property>
     	<rule-property name="checkReferences">false</rule-property>
        <expected-problems>0</expected-problems>
        <code><![CDATA[
package net.sourceforge.pmd.lang.java.rule.comments;

/**
 * @see Class
 */
public class JavaDocTestClass {
}
     ]]></code>      
    </test-code>
                                           
    <test-code>
        <description><![CDATA[
Malformed see tag.
     ]]></description>
     	<rule-property name="minimumContentLength">0</rule-property>
     	<rule-property name="checkReferences">false</rule-property>
        <expected-problems>1</expected-problems>
        <code><![CDATA[
package net.sourceforge.pmd.lang.java.rule.comments;

/**
 * @see
 */
public class JavaDocTestClass {
}
     ]]></code>      
    </test-code>
                                                                                      
	<!-- VALUE -->
                            
    <test-code>
        <description><![CDATA[
Value tag.
     ]]></description>
     	<rule-property name="minimumContentLength">0</rule-property>
     	<rule-property name="checkReferences">false</rule-property>
        <expected-problems>0</expected-problems>
        <code><![CDATA[
package net.sourceforge.pmd.lang.java.rule.comments;

/**
 * @value Class#field
 */
public class JavaDocTestClass {
}
     ]]></code>      
    </test-code>
                                           
    <test-code>
        <description><![CDATA[
Malformed value tag.
     ]]></description>
     	<rule-property name="minimumContentLength">0</rule-property>
     	<rule-property name="checkReferences">false</rule-property>
        <expected-problems>1</expected-problems>
        <code><![CDATA[
package net.sourceforge.pmd.lang.java.rule.comments;

/**
 * @value
 */
public class JavaDocTestClass {
}
     ]]></code>      
    </test-code>
                                                                                                              
	<!-- THROWS / EXCEPTION -->
                                                                                                 
	<!-- THROWS / EXCEPTION -->
                            
    <test-code>
        <description><![CDATA[
Throws / exception tag.
     ]]></description>
     	<rule-property name="minimumContentLength">0</rule-property>
     	<rule-property name="checkReferences">false</rule-property>
        <expected-problems>0</expected-problems>
        <code><![CDATA[
package net.sourceforge.pmd.lang.java.rule.comments;

public class JavaDocTestClass {

	/**
	 * @throws IllegalAccessException
     * @exception InterruptedException
     */
	public void method() throws IllegalAccessException, InterruptedException {}
}
     ]]></code>      
    </test-code>
                                            
    <test-code>
        <description><![CDATA[
Throws / exception not actually thrown.
     ]]></description>
     	<rule-property name="minimumContentLength">0</rule-property>
     	<rule-property name="checkReferences">false</rule-property>
        <expected-problems>2</expected-problems>
        <code><![CDATA[
package net.sourceforge.pmd.lang.java.rule.comments;

public class JavaDocTestClass {

	/**
	 * Both exceptions are not in the throws list.
	 * @throws IllegalAccessException
     * @exception InterruptedException
     */
	public void method() {}
}
     ]]></code>      
    </test-code>                    
                                           
    <test-code>
        <description><![CDATA[
Malformed throws / exception tag.
     ]]></description>
     	<rule-property name="minimumContentLength">0</rule-property>
     	<rule-property name="checkReferences">false</rule-property>
        <expected-problems>2</expected-problems>
        <code><![CDATA[
package net.sourceforge.pmd.lang.java.rule.comments;

public class JavaDocTestClass {

    /**
     * @throws
     * @exception
     */
	public void method() {}
}
     ]]></code>      
    </test-code>              
                            
    <test-code>
        <description><![CDATA[
Illegal throws / exception tag.
     ]]></description>
     	<rule-property name="minimumContentLength">0</rule-property>
     	<rule-property name="checkReferences">false</rule-property>
        <expected-problems>2</expected-problems>
        <code><![CDATA[
package net.sourceforge.pmd.lang.java.rule.comments;

/**
 * @throws IllegalAccessException
 * @exception InterruptedException
 */
public class JavaDocTestClass {
}
     ]]></code>      
    </test-code>
    
    <test-code>
        <description><![CDATA[
Unresolved exception.
     ]]></description>
     	<rule-property name="minimumContentLength">0</rule-property>
     	<rule-property name="checkReferences">true</rule-property>
        <expected-problems>1</expected-problems>
        <code><![CDATA[
package net.sourceforge.pmd.lang.java.rule.comments;

public class JavaDocTestClass {
	/**
 	 * @throws UnresolvedException
 	 */
 	public void method() {}
}
     ]]></code>      
    </test-code>
           
</test-data>
